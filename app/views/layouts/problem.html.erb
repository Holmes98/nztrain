<% content_for :title, @problem.name %>
<%= toolbox_push :edit, edit_problem_path(@problem) if policy(@problem).edit? %> 
<%= toolbox_push :delete, @problem if policy(@problem).destroy? %> 

<% content_for :content do %>
<% if policy(@problem).inspect? %>
  <% if !@problem.test_submissions.any? %>
    <div class="warning_message">No test submissions</div>
  <% else %>
    <% if @problem.test_error_count > 0 %>
      <div class="error_message">Error in test submissions</div>
    <% elsif @problem.test_warning_count > 0 %>
      <div class="warning_message">Warning in test submissions</div>
    <% else %>
      <div class="ok_message">Test submissions passing</div>
    <% end %>
  <% end %>
<% end %>
<% if @problem.input.nil? %>
  <b>Input: </b>Standard Input (stdin)<br />
<% else %>
  <b>Input File: </b><%= @problem.input %><br />
<% end %>
<% if @problem.output.nil? %>
  <b>Output: </b>Standard Output (stdout)<br />
<% else %>
  <b>Output File: </b><%= @problem.output %><br />
<% end %>
  <b>Memory limit: </b><%= @problem.memory_limit %> megabytes<br />
  <b>Time limit: </b><%= @problem.time_limit %> seconds<br />
  <%=
#  SimpleNavigation::ItemContainer.new do |menu|
  render_navigation do |menu|
    menu.dom_class = :tab_menu
    menu.item :statement, "problem statement", problem_path(@problem)
    menu.item :files, "files", problem_files_path(@problem) if policy(@problem).update? || (@problem.filelinks.any? && policy(@problem).access?)
    menu.item :submit, "submit", submit_problem_path(@problem), :highlights_on => :subpath
    menu.item :submissions, "submissions", submissions_problem_path(@problem) if policy(@problem).view_submissions?
    menu.item :hall_of_fame, "hall of fame", hall_of_fame_problem_path(@problem) if policy(@problem).view_submissions?
    menu.item :test_cases, "test cases", problem_test_cases_path(@problem) if policy(@problem).inspect?
    menu.item :testing, "testing", testing_problem_path(@problem) if policy(@problem).inspect?
#  end.render
  end
  %>
  <%= content_tag :div, :class => :tab_box do %>
    <%= yield %>
  <% end %>
<% end %>
<%= render :template => 'layouts/scaffold' %>
